package com.tianniu.pojo;

import java.util.ArrayList;
import java.util.List;

public class MemberOrderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public MemberOrderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andOrdernumberIsNull() {
            addCriterion("ORDERNUMBER is null");
            return (Criteria) this;
        }

        public Criteria andOrdernumberIsNotNull() {
            addCriterion("ORDERNUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andOrdernumberEqualTo(String value) {
            addCriterion("ORDERNUMBER =", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberNotEqualTo(String value) {
            addCriterion("ORDERNUMBER <>", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberGreaterThan(String value) {
            addCriterion("ORDERNUMBER >", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberGreaterThanOrEqualTo(String value) {
            addCriterion("ORDERNUMBER >=", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberLessThan(String value) {
            addCriterion("ORDERNUMBER <", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberLessThanOrEqualTo(String value) {
            addCriterion("ORDERNUMBER <=", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberLike(String value) {
            addCriterion("ORDERNUMBER like", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberNotLike(String value) {
            addCriterion("ORDERNUMBER not like", value, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberIn(List<String> values) {
            addCriterion("ORDERNUMBER in", values, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberNotIn(List<String> values) {
            addCriterion("ORDERNUMBER not in", values, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberBetween(String value1, String value2) {
            addCriterion("ORDERNUMBER between", value1, value2, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andOrdernumberNotBetween(String value1, String value2) {
            addCriterion("ORDERNUMBER not between", value1, value2, "ordernumber");
            return (Criteria) this;
        }

        public Criteria andCardNumberIsNull() {
            addCriterion("CARD_NUMBER is null");
            return (Criteria) this;
        }

        public Criteria andCardNumberIsNotNull() {
            addCriterion("CARD_NUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andCardNumberEqualTo(Short value) {
            addCriterion("CARD_NUMBER =", value, "cardNumber");
            return (Criteria) this;
        }

        public Criteria andCardNumberNotEqualTo(Short value) {
            addCriterion("CARD_NUMBER <>", value, "cardNumber");
            return (Criteria) this;
        }

        public Criteria andCardNumberGreaterThan(Short value) {
            addCriterion("CARD_NUMBER >", value, "cardNumber");
            return (Criteria) this;
        }

        public Criteria andCardNumberGreaterThanOrEqualTo(Short value) {
            addCriterion("CARD_NUMBER >=", value, "cardNumber");
            return (Criteria) this;
        }

        public Criteria andCardNumberLessThan(Short value) {
            addCriterion("CARD_NUMBER <", value, "cardNumber");
            return (Criteria) this;
        }

        public Criteria andCardNumberLessThanOrEqualTo(Short value) {
            addCriterion("CARD_NUMBER <=", value, "cardNumber");
            return (Criteria) this;
        }

        public Criteria andCardNumberIn(List<Short> values) {
            addCriterion("CARD_NUMBER in", values, "cardNumber");
            return (Criteria) this;
        }

        public Criteria andCardNumberNotIn(List<Short> values) {
            addCriterion("CARD_NUMBER not in", values, "cardNumber");
            return (Criteria) this;
        }

        public Criteria andCardNumberBetween(Short value1, Short value2) {
            addCriterion("CARD_NUMBER between", value1, value2, "cardNumber");
            return (Criteria) this;
        }

        public Criteria andCardNumberNotBetween(Short value1, Short value2) {
            addCriterion("CARD_NUMBER not between", value1, value2, "cardNumber");
            return (Criteria) this;
        }

        public Criteria andOrdertimeIsNull() {
            addCriterion("ORDERTIME is null");
            return (Criteria) this;
        }

        public Criteria andOrdertimeIsNotNull() {
            addCriterion("ORDERTIME is not null");
            return (Criteria) this;
        }

        public Criteria andOrdertimeEqualTo(String value) {
            addCriterion("ORDERTIME =", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeNotEqualTo(String value) {
            addCriterion("ORDERTIME <>", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeGreaterThan(String value) {
            addCriterion("ORDERTIME >", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeGreaterThanOrEqualTo(String value) {
            addCriterion("ORDERTIME >=", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeLessThan(String value) {
            addCriterion("ORDERTIME <", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeLessThanOrEqualTo(String value) {
            addCriterion("ORDERTIME <=", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeLike(String value) {
            addCriterion("ORDERTIME like", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeNotLike(String value) {
            addCriterion("ORDERTIME not like", value, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeIn(List<String> values) {
            addCriterion("ORDERTIME in", values, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeNotIn(List<String> values) {
            addCriterion("ORDERTIME not in", values, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeBetween(String value1, String value2) {
            addCriterion("ORDERTIME between", value1, value2, "ordertime");
            return (Criteria) this;
        }

        public Criteria andOrdertimeNotBetween(String value1, String value2) {
            addCriterion("ORDERTIME not between", value1, value2, "ordertime");
            return (Criteria) this;
        }

        public Criteria andSuccessflagIsNull() {
            addCriterion("SUCCESSFLAG is null");
            return (Criteria) this;
        }

        public Criteria andSuccessflagIsNotNull() {
            addCriterion("SUCCESSFLAG is not null");
            return (Criteria) this;
        }

        public Criteria andSuccessflagEqualTo(String value) {
            addCriterion("SUCCESSFLAG =", value, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagNotEqualTo(String value) {
            addCriterion("SUCCESSFLAG <>", value, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagGreaterThan(String value) {
            addCriterion("SUCCESSFLAG >", value, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagGreaterThanOrEqualTo(String value) {
            addCriterion("SUCCESSFLAG >=", value, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagLessThan(String value) {
            addCriterion("SUCCESSFLAG <", value, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagLessThanOrEqualTo(String value) {
            addCriterion("SUCCESSFLAG <=", value, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagLike(String value) {
            addCriterion("SUCCESSFLAG like", value, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagNotLike(String value) {
            addCriterion("SUCCESSFLAG not like", value, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagIn(List<String> values) {
            addCriterion("SUCCESSFLAG in", values, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagNotIn(List<String> values) {
            addCriterion("SUCCESSFLAG not in", values, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagBetween(String value1, String value2) {
            addCriterion("SUCCESSFLAG between", value1, value2, "successflag");
            return (Criteria) this;
        }

        public Criteria andSuccessflagNotBetween(String value1, String value2) {
            addCriterion("SUCCESSFLAG not between", value1, value2, "successflag");
            return (Criteria) this;
        }

        public Criteria andFailflagIsNull() {
            addCriterion("FAILFLAG is null");
            return (Criteria) this;
        }

        public Criteria andFailflagIsNotNull() {
            addCriterion("FAILFLAG is not null");
            return (Criteria) this;
        }

        public Criteria andFailflagEqualTo(String value) {
            addCriterion("FAILFLAG =", value, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagNotEqualTo(String value) {
            addCriterion("FAILFLAG <>", value, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagGreaterThan(String value) {
            addCriterion("FAILFLAG >", value, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagGreaterThanOrEqualTo(String value) {
            addCriterion("FAILFLAG >=", value, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagLessThan(String value) {
            addCriterion("FAILFLAG <", value, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagLessThanOrEqualTo(String value) {
            addCriterion("FAILFLAG <=", value, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagLike(String value) {
            addCriterion("FAILFLAG like", value, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagNotLike(String value) {
            addCriterion("FAILFLAG not like", value, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagIn(List<String> values) {
            addCriterion("FAILFLAG in", values, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagNotIn(List<String> values) {
            addCriterion("FAILFLAG not in", values, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagBetween(String value1, String value2) {
            addCriterion("FAILFLAG between", value1, value2, "failflag");
            return (Criteria) this;
        }

        public Criteria andFailflagNotBetween(String value1, String value2) {
            addCriterion("FAILFLAG not between", value1, value2, "failflag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated do_not_delete_during_merge Wed Jan 09 15:34:13 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MEMBER_ORDER
     *
     * @mbggenerated Wed Jan 09 15:34:13 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}